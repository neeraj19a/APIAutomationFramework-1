<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="18" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="29613" started-at="2021-08-01T10:45:39Z" finished-at="2021-08-01T10:46:08Z">
    <groups>
    </groups>
    <test name="Regression of Existing Bookings" duration-ms="17905" started-at="2021-08-01T10:45:39Z" finished-at="2021-08-01T10:45:57Z">
      <class name="testcases.TestCasesExistingBooking">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeClass" is-config="true" duration-ms="18" started-at="2021-08-01T10:45:39Z" finished-at="2021-08-01T10:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeMethod" is-config="true" duration-ms="16" started-at="2021-08-01T10:45:39Z" finished-at="2021-08-01T10:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesExistingBooking.getListOfBooking() throws com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getListOfBooking()[pri:1, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="getListOfBooking" duration-ms="5391" started-at="2021-08-01T10:45:39Z" finished-at="2021-08-01T10:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="afterMethod" is-config="true" duration-ms="3" started-at="2021-08-01T10:45:44Z" finished-at="2021-08-01T10:45:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getListOfBooking status=SUCCESS method=TestCasesExistingBooking.getListOfBooking()[pri:1, instance:testcases.TestCasesExistingBooking@5038d0b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2021-08-01T10:45:44Z" finished-at="2021-08-01T10:45:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesExistingBooking.getExistingBookingById() throws com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getExistingBookingById()[pri:2, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="getExistingBookingById" duration-ms="1321" started-at="2021-08-01T10:45:44Z" finished-at="2021-08-01T10:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExistingBookingById -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:45Z" finished-at="2021-08-01T10:45:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getExistingBookingById status=SUCCESS method=TestCasesExistingBooking.getExistingBookingById()[pri:2, instance:testcases.TestCasesExistingBooking@5038d0b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:45Z" finished-at="2021-08-01T10:45:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesExistingBooking.updateExistingBookingWithoutToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="updateExistingBookingWithoutToken()[pri:3, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="updateExistingBookingWithoutToken" duration-ms="1937" started-at="2021-08-01T10:45:45Z" finished-at="2021-08-01T10:45:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateExistingBookingWithoutToken -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:47Z" finished-at="2021-08-01T10:45:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateExistingBookingWithoutToken status=SUCCESS method=TestCasesExistingBooking.updateExistingBookingWithoutToken()[pri:3, instance:testcases.TestCasesExistingBooking@5038d0b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:47Z" finished-at="2021-08-01T10:45:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesExistingBooking.patchExistingBookingWithoutToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="patchExistingBookingWithoutToken()[pri:4, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="patchExistingBookingWithoutToken" duration-ms="1526" started-at="2021-08-01T10:45:47Z" finished-at="2021-08-01T10:45:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patchExistingBookingWithoutToken -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:49Z" finished-at="2021-08-01T10:45:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=patchExistingBookingWithoutToken status=SUCCESS method=TestCasesExistingBooking.patchExistingBookingWithoutToken()[pri:4, instance:testcases.TestCasesExistingBooking@5038d0b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:49Z" finished-at="2021-08-01T10:45:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesExistingBooking.generateToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="generateToken()[pri:5, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="generateToken" duration-ms="2158" started-at="2021-08-01T10:45:49Z" finished-at="2021-08-01T10:45:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateToken -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:51Z" finished-at="2021-08-01T10:45:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=generateToken status=SUCCESS method=TestCasesExistingBooking.generateToken()[pri:5, instance:testcases.TestCasesExistingBooking@5038d0b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:51Z" finished-at="2021-08-01T10:45:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesExistingBooking.updateExistingBooking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="updateExistingBooking()[pri:6, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="updateExistingBooking" duration-ms="1592" started-at="2021-08-01T10:45:51Z" finished-at="2021-08-01T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateExistingBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="afterMethod" is-config="true" duration-ms="2" started-at="2021-08-01T10:45:53Z" finished-at="2021-08-01T10:45:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateExistingBooking status=SUCCESS method=TestCasesExistingBooking.updateExistingBooking()[pri:6, instance:testcases.TestCasesExistingBooking@5038d0b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2021-08-01T10:45:53Z" finished-at="2021-08-01T10:45:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesExistingBooking.getLastUpdatedExistingBooking() throws com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getLastUpdatedExistingBooking()[pri:7, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="getLastUpdatedExistingBooking" duration-ms="1273" started-at="2021-08-01T10:45:53Z" finished-at="2021-08-01T10:45:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLastUpdatedExistingBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:54Z" finished-at="2021-08-01T10:45:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getLastUpdatedExistingBooking status=SUCCESS method=TestCasesExistingBooking.getLastUpdatedExistingBooking()[pri:7, instance:testcases.TestCasesExistingBooking@5038d0b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:54Z" finished-at="2021-08-01T10:45:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesExistingBooking.patchLastUpdatedExistingBooking() throws com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="patchLastUpdatedExistingBooking()[pri:8, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="patchLastUpdatedExistingBooking" duration-ms="1376" started-at="2021-08-01T10:45:54Z" finished-at="2021-08-01T10:45:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patchLastUpdatedExistingBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:55Z" finished-at="2021-08-01T10:45:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=patchLastUpdatedExistingBooking status=SUCCESS method=TestCasesExistingBooking.patchLastUpdatedExistingBooking()[pri:8, instance:testcases.TestCasesExistingBooking@5038d0b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:55Z" finished-at="2021-08-01T10:45:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesExistingBooking.deleteExistingBooking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="deleteExistingBooking()[pri:9, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="deleteExistingBooking" duration-ms="1249" started-at="2021-08-01T10:45:55Z" finished-at="2021-08-01T10:45:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteExistingBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesExistingBooking@5038d0b5]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:57Z" finished-at="2021-08-01T10:45:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteExistingBooking status=SUCCESS method=TestCasesExistingBooking.deleteExistingBooking()[pri:9, instance:testcases.TestCasesExistingBooking@5038d0b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testcases.TestCasesExistingBooking -->
    </test> <!-- Regression of Existing Bookings -->
    <test name="Regression of New  Bookings" duration-ms="11689" started-at="2021-08-01T10:45:57Z" finished-at="2021-08-01T10:46:08Z">
      <class name="testcases.TestCasesNewBooking">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="setUp" is-config="true" duration-ms="334" started-at="2021-08-01T10:45:38Z" finished-at="2021-08-01T10:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:57Z" finished-at="2021-08-01T10:45:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesNewBooking.getListOfBooking() throws com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeClass" is-config="true" duration-ms="0" started-at="2021-08-01T10:45:57Z" finished-at="2021-08-01T10:45:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getListOfBooking()[pri:1, instance:testcases.TestCasesNewBooking@376a0d86]" name="getListOfBooking" duration-ms="1250" started-at="2021-08-01T10:45:57Z" finished-at="2021-08-01T10:45:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:58Z" finished-at="2021-08-01T10:45:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getListOfBooking status=SUCCESS method=TestCasesNewBooking.getListOfBooking()[pri:1, instance:testcases.TestCasesNewBooking@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:58Z" finished-at="2021-08-01T10:45:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesNewBooking.createBooking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createBooking()[pri:2, instance:testcases.TestCasesNewBooking@376a0d86]" name="createBooking" duration-ms="1368" started-at="2021-08-01T10:45:58Z" finished-at="2021-08-01T10:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-08-01T10:45:59Z" finished-at="2021-08-01T10:45:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createBooking status=SUCCESS method=TestCasesNewBooking.createBooking()[pri:2, instance:testcases.TestCasesNewBooking@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:45:59Z" finished-at="2021-08-01T10:45:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesNewBooking.getLastCreatedBookingById() throws com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getLastCreatedBookingById()[pri:3, instance:testcases.TestCasesNewBooking@376a0d86]" name="getLastCreatedBookingById" duration-ms="1317" started-at="2021-08-01T10:45:59Z" finished-at="2021-08-01T10:46:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLastCreatedBookingById -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="afterMethod" is-config="true" duration-ms="2" started-at="2021-08-01T10:46:00Z" finished-at="2021-08-01T10:46:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getLastCreatedBookingById status=SUCCESS method=TestCasesNewBooking.getLastCreatedBookingById()[pri:3, instance:testcases.TestCasesNewBooking@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2021-08-01T10:46:00Z" finished-at="2021-08-01T10:46:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesNewBooking.generateToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="generateToken()[pri:4, instance:testcases.TestCasesNewBooking@376a0d86]" name="generateToken" duration-ms="1188" started-at="2021-08-01T10:46:00Z" finished-at="2021-08-01T10:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateToken -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:46:02Z" finished-at="2021-08-01T10:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=generateToken status=SUCCESS method=TestCasesNewBooking.generateToken()[pri:4, instance:testcases.TestCasesNewBooking@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:46:02Z" finished-at="2021-08-01T10:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesNewBooking.updateLastCreatedBooking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="updateLastCreatedBooking()[pri:5, instance:testcases.TestCasesNewBooking@376a0d86]" name="updateLastCreatedBooking" duration-ms="1218" started-at="2021-08-01T10:46:02Z" finished-at="2021-08-01T10:46:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateLastCreatedBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:46:03Z" finished-at="2021-08-01T10:46:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateLastCreatedBooking status=SUCCESS method=TestCasesNewBooking.updateLastCreatedBooking()[pri:5, instance:testcases.TestCasesNewBooking@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2021-08-01T10:46:03Z" finished-at="2021-08-01T10:46:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesNewBooking.getLastUpdatedBooking() throws com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getLastUpdatedBooking()[pri:6, instance:testcases.TestCasesNewBooking@376a0d86]" name="getLastUpdatedBooking" duration-ms="1343" started-at="2021-08-01T10:46:03Z" finished-at="2021-08-01T10:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLastUpdatedBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:46:04Z" finished-at="2021-08-01T10:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getLastUpdatedBooking status=SUCCESS method=TestCasesNewBooking.getLastUpdatedBooking()[pri:6, instance:testcases.TestCasesNewBooking@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:46:04Z" finished-at="2021-08-01T10:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesNewBooking.patchLastUpdatedBooking() throws com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="patchLastUpdatedBooking()[pri:7, instance:testcases.TestCasesNewBooking@376a0d86]" name="patchLastUpdatedBooking" duration-ms="1350" started-at="2021-08-01T10:46:04Z" finished-at="2021-08-01T10:46:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patchLastUpdatedBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:46:06Z" finished-at="2021-08-01T10:46:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=patchLastUpdatedBooking status=SUCCESS method=TestCasesNewBooking.patchLastUpdatedBooking()[pri:7, instance:testcases.TestCasesNewBooking@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-01T10:46:06Z" finished-at="2021-08-01T10:46:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesNewBooking.deleteLastCreatedBooking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="deleteLastCreatedBooking()[pri:8, instance:testcases.TestCasesNewBooking@376a0d86]" name="deleteLastCreatedBooking" duration-ms="1286" started-at="2021-08-01T10:46:06Z" finished-at="2021-08-01T10:46:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteLastCreatedBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="afterMethod" is-config="true" duration-ms="4" started-at="2021-08-01T10:46:07Z" finished-at="2021-08-01T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteLastCreatedBooking status=SUCCESS method=TestCasesNewBooking.deleteLastCreatedBooking()[pri:8, instance:testcases.TestCasesNewBooking@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2021-08-01T10:46:07Z" finished-at="2021-08-01T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TestCasesNewBooking.getLastDeletedBooking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getLastDeletedBooking()[pri:9, instance:testcases.TestCasesNewBooking@376a0d86]" name="getLastDeletedBooking" duration-ms="1334" started-at="2021-08-01T10:46:07Z" finished-at="2021-08-01T10:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLastDeletedBooking -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="afterMethod" is-config="true" duration-ms="5" started-at="2021-08-01T10:46:08Z" finished-at="2021-08-01T10:46:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getLastDeletedBooking status=SUCCESS method=TestCasesNewBooking.getLastDeletedBooking()[pri:9, instance:testcases.TestCasesNewBooking@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownFramework()[pri:0, instance:testcases.TestCasesNewBooking@376a0d86]" name="tearDownFramework" is-config="true" duration-ms="317" started-at="2021-08-01T10:46:08Z" finished-at="2021-08-01T10:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownFramework -->
      </class> <!-- testcases.TestCasesNewBooking -->
    </test> <!-- Regression of New  Bookings -->
  </suite> <!-- Suite -->
</testng-results>
